# ==========================================
# Collide User Service Docker环境配置
# 专门用于Docker Compose部署的环境变量
# ==========================================

# =================== 应用基础配置 ===================
APP_NAME=collide-api-service
APP_VERSION=1.0.0
DEBUG=false
SERVICE_NAME=collide-api-service

# =================== 服务器配置 ===================
HOST=0.0.0.0
PORT=8000

# =================== 数据库配置 ===================
# Docker内部网络连接MySQL容器
# 如果MySQL运行在同一个Docker网络中，使用容器名
DATABASE_URL=mysql+pymysql://root:123456@mysql:3306/collide

# 如果连接外部MySQL服务器，使用实际IP
# DATABASE_URL=mysql+pymysql://root:123456@43.166.242.211:3306/collide

# =================== Nacos配置 ===================
# Docker内部网络连接Nacos容器
NACOS_SERVER=nacos:8848

# 如果连接外部Nacos服务器，使用实际IP
# NACOS_SERVER=43.166.242.211:8848

# Nacos命名空间（用于环境隔离）
NACOS_NAMESPACE=public

# Nacos分组（用于业务分组）
NACOS_GROUP=DEFAULT_GROUP

# Nacos认证信息（如果启用了认证）
# NACOS_USERNAME=nacos
# NACOS_PASSWORD=nacos

# =================== 服务注册配置 ===================
# 服务IP地址（Docker环境中通常自动获取）
# SERVICE_IP=172.20.3.15

# 服务权重（负载均衡权重，范围0-1）
SERVICE_WEIGHT=1.0

# 服务健康状态
SERVICE_HEALTHY=true

# 服务是否启用
SERVICE_ENABLED=true

# 是否为临时实例（临时实例在服务停止时会自动删除）
SERVICE_EPHEMERAL=true

# =================== 网关传递头部配置 ===================
# Spring Gateway通过以下HTTP头传递用户信息
USER_ID_HEADER=X-User-Id
USERNAME_HEADER=X-Username
USER_ROLE_HEADER=X-User-Role

# =================== 安全配置 ===================
# 密码加密轮数（建议12-15，越高越安全但越慢）
PASSWORD_BCRYPT_ROUNDS=12

# =================== Redis配置 ===================
# Redis服务器地址（Docker环境中使用容器名）
REDIS_HOST=redis

# 如果连接外部Redis服务器，使用实际IP
# REDIS_HOST=43.166.242.211

# Redis端口
REDIS_PORT=6379

# Redis密码
REDIS_PASSWORD=123456

# Redis数据库编号（0-15）
REDIS_DB=0

# Redis连接池配置
REDIS_MAX_CONNECTIONS=20
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# =================== 日志配置 ===================
# 日志级别：DEBUG、INFO、WARNING、ERROR
LOG_LEVEL=INFO

# =================== 其他配置 ===================
# 服务描述
SERVICE_DESCRIPTION=Collide平台用户微服务

# 服务标签（用于服务治理）
SERVICE_TAGS=user,microservice,fastapi,docker

# =================== 支付相关（可选） ===================
# 对外回调地址根域名（用于第三方回调通知，留空则使用相对路径）
# 例如：PAYMENT_PUBLIC_BASE_URL=https://api.yourdomain.com
PAYMENT_PUBLIC_BASE_URL=

# 上游支付网关默认基础地址（当渠道未单独配置 api_gateway 时使用）
# 例如：DEFAULT_PAYMENT_API_BASE_URL=https://pay.yourgateway.com
DEFAULT_PAYMENT_API_BASE_URL=

# ==========================================
# Docker环境特殊配置说明：
# 
# 1. 网络配置：
#    - 容器间通信使用容器名作为主机名
#    - 外部访问使用宿主机IP或域名
#
# 2. 数据库连接：
#    - 同网络：mysql:3306
#    - 外部：实际IP:3306
#
# 3. Nacos连接：
#    - 同网络：nacos:8848
#    - 外部：实际IP:8848
#
# 4. 服务注册：
#    - Docker环境中SERVICE_IP通常由容器自动获取
#    - 如需指定，使用容器在网络中的IP
#
# 5. 端口映射：
#    - 容器内端口：8000
#    - 宿主机端口：可通过docker-compose配置
#
# 6. 健康检查：
#    - 使用容器内地址：localhost:8000/health
#    - 确保健康检查路径可访问
# ==========================================


# AWS S3 配置
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_REGION=us-east-1
AWS_S3_BUCKET_NAME=your-s3-bucket-name

# 安全配置
ALLOWED_DOMAINS=example.com,yourdomain.com,localhost:3000
MAX_FILE_SIZE=10485760
ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,webp,pdf,doc,docx,xls,xlsx,ppt,pptx,txt,zip,rar,mp4,mp3,wav

# CDN配置（可选）
CDN_DOMAIN=cdn.yourdomain.com
