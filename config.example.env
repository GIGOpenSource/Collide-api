# ==========================================
# Collide User Service 微服务配置
# 请复制此文件为 .env 并根据实际环境修改配置
# ==========================================

# =================== 应用基础配置 ===================
APP_NAME=collide-api-service
APP_VERSION=1.0.0
DEBUG=true
SERVICE_NAME=collide-api-service

# =================== 服务器配置 ===================
HOST=0.0.0.0
PORT=8000

# =================== 数据库配置 ===================
# MySQL数据库连接字符串
# 格式：mysql+pymysql://用户名:密码@主机:端口/数据库名
DATABASE_URL=mysql+pymysql://root:123456@172.20.1.10:3306/collide

# =================== Nacos配置 ===================
# Nacos服务器地址（多个地址用逗号分隔）
NACOS_SERVER=43.166.242.211:8848

# Nacos命名空间（用于环境隔离）
# 开发环境: dev, 测试环境: test, 生产环境: prod
NACOS_NAMESPACE=public

# Nacos分组（用于业务分组）
NACOS_GROUP=DEFAULT_GROUP

# Nacos认证信息（如果启用了认证）
# NACOS_USERNAME=nacos
# NACOS_PASSWORD=nacos

# =================== 服务注册配置 ===================
# 服务IP地址（留空自动获取本机IP）
# SERVICE_IP=192.168.1.100

# 服务权重（负载均衡权重，范围0-1）
SERVICE_WEIGHT=1.0

# 服务健康状态
SERVICE_HEALTHY=true

# 服务是否启用
SERVICE_ENABLED=true

# 是否为临时实例（临时实例在服务停止时会自动删除）
SERVICE_EPHEMERAL=true

# =================== 网关传递头部配置 ===================
# Spring Gateway通过以下HTTP头传递用户信息
USER_ID_HEADER=X-User-Id
USERNAME_HEADER=X-Username
USER_ROLE_HEADER=X-User-Role

# =================== 安全配置 ===================
# 密码加密轮数（建议12-15，越高越安全但越慢）
PASSWORD_BCRYPT_ROUNDS=12

# =================== Redis配置 ===================
# Redis服务器地址
REDIS_HOST=172.20.1.40

# Redis端口
REDIS_PORT=6379

# Redis密码
REDIS_PASSWORD=123456

# Redis数据库编号（0-15）
REDIS_DB=0

# Redis连接池配置
REDIS_MAX_CONNECTIONS=20
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# =================== 日志配置 ===================
# 日志级别：DEBUG、INFO、WARNING、ERROR
LOG_LEVEL=INFO

# =================== 其他配置 ===================
# 服务描述
SERVICE_DESCRIPTION=Collide平台微服务

# 服务标签（用于服务治理）
SERVICE_TAGS=user,microservice,fastapi

# ==========================================
# 环境变量使用说明：
# 
# 1. 本地开发环境：
#    cp config.example.env .env
#    - DEBUG=true
#    - NACOS_NAMESPACE=dev
#    - LOG_LEVEL=DEBUG
#    - 使用外部IP连接数据库和Nacos
#
# 2. 测试环境：
#    - DEBUG=false
#    - NACOS_NAMESPACE=test
#    - LOG_LEVEL=INFO
#
# 3. 生产环境：
#    - DEBUG=false
#    - NACOS_NAMESPACE=prod
#    - LOG_LEVEL=WARNING
#    - 建议使用环境变量而非.env文件
#
# 4. Docker开发环境：
#    cp config.docker.env .env
#    - 使用容器名连接服务（如mysql:3306）
#    - 配置Docker网络IP范围
#    - 调整健康检查配置
#
# 5. Docker生产环境：
#    - 通过docker-compose.yml或k8s configmap传递
#    - SERVICE_IP建议在容器环境中自动获取
#    - 使用外部数据库和注册中心
#
# 6. 集群部署：
#    - 确保NACOS_SERVER配置为集群地址
#    - 根据实例配置不同的SERVICE_WEIGHT
#    - 配置负载均衡和故障转移
# ==========================================